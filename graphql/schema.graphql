type WishList {
  data: [ListItem]
  public: Boolean
  name: String
  range: Range
}

type ListItem {
  id: ID
  productId: String!
  sku: String
  title: String
}

type Range {
  total: Int
  from: Int
  to: Int
}

type CheckListType {
  inList: Boolean
  listNames: [String]
  listIds: [ID]
  message: String
}

input ListItemInputType {
  id: ID
  productId: String!
  sku: String
  title: String
}

type Query {
  viewList(shopperId: String!, name: String!, from: Int, to: Int): WishList
    @cacheControl(scope: PRIVATE, maxAge: ZERO)
  viewLists(shopperId: String!, from: Int, to: Int): [WishList]
    @cacheControl(scope: PRIVATE, maxAge: ZERO)
  checkList(shopperId: String!, productId: String!, sku: String): CheckListType
    @cacheControl(scope: PRIVATE)
  listNames(shopperId: String!): [String]
}

type Mutation {
  addToList(
    listItem: ListItemInputType!
    shopperId: String!
    name: String!
    public: Boolean
  ): ID @cacheControl(scope: PRIVATE)
  removeFromList(id: ID!, shopperId: String!, name: String): Boolean
    @cacheControl(scope: PRIVATE)
}
